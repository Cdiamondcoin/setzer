#!/usr/bin/env bash
set -e
test -z $ETH_RPC_PORT && export ETH_RPC_PORT=8545
test -z $ETH_GAS && export ETH_GAS=200000
test -z $ETH_GAS_PRICE && export ETH_GAS_PRICE=4000000000
test -z $SPREAD && export SPREAD=1
test -z $ETH_FROM && exit 1;
test -z $SOURCE && exit 1;
test -z $POKER && exit 1;
test -z $MED && exit 1;

export SOURCE=$SOURCE
export POKER=$POKER
export MED=$MED

LOCKDIR="/tmp/update-$POKER"

#Remove the lock directory
function cleanup {
    if rmdir $LOCKDIR; then
        echo "Finished"
    else
        echo "Failed to remove lock directory '$LOCKDIR'"
        exit 1
    fi
}

if mkdir $LOCKDIR; then
    #Ensure that if we "grabbed a lock", we release it
    #Works for SIGTERM and SIGINT(Ctrl-C)
    trap "cleanup" EXIT

    echo `date` "Acquired lock, running"

    # Processing starts here
    expires=$(setzer expires "$POKER")
    echo Expires in `setzer --format "$expires"`
    if [ "$expires" -lt 3600 ]; then
        echo "Expires in less than an hour, will update."
        needsupdate=true
    fi

    old=($(setzer peek "$POKER"))
    old=${old[0]}
    new=$(setzer price "$SOURCE")
    spread=$(setzer spread "$old" "$new")
    echo "Old ($old) New ($new) Spread ($spread)"
    
    test=$(bc <<< "${spread#-} >= ${SPREAD}")
    if [[ ${test} -ne 0 ]]; then
        needsupdate=true
        echo "Spread larger than $SPREAD, will update."
    fi

    until=$(date +%s -d'+6 hour')

    if [ $needsupdate == true ]; then
        setzer post "$POKER" "$new" "$until" "$MED"
    fi

else
    echo "Could not create lock directory '$LOCKDIR'"
    exit 1
fi
